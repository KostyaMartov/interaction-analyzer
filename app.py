import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è", page_icon="üë•", layout="wide")

st.title("üë• –ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–≤—É—Ö –ª—é–¥–µ–π")

# === –°–ë–û–† –î–ê–ù–ù–´–• –ù–ê –í–ï–†–•–ù–ï–ú –£–†–û–í–ù–ï (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è Streamlit) ===

st.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")

col1, col2 = st.columns(2)

with col1:
    st.subheader("–ß–µ–ª–æ–≤–µ–∫ –ê")
    a_openness = st.slider("–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É (–ê)", 1, 10, 7)
    a_conscientiousness = st.slider("–î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å (–ê)", 1, 10, 6)
    a_extraversion = st.slider("–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è (–ê)", 1, 10, 8)
    a_agreeableness = st.slider("–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–ê)", 1, 10, 5)
    a_neuroticism = st.slider("–ù–µ–≤—Ä–æ—Ç–∏–∑–º (–ê)", 1, 10, 3)

with col2:
    st.subheader("–ß–µ–ª–æ–≤–µ–∫ –ë")
    b_openness = st.slider("–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É (–ë)", 1, 10, 5)
    b_conscientiousness = st.slider("–î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å (–ë)", 1, 10, 9)
    b_extraversion = st.slider("–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è (–ë)", 1, 10, 4)
    b_agreeableness = st.slider("–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–ë)", 1, 10, 8)
    b_neuroticism = st.slider("–ù–µ–≤—Ä–æ—Ç–∏–∑–º (–ë)", 1, 10, 6)

st.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")

col3, col4 = st.columns(2)

with col3:
    relationship_type = st.selectbox("–¢–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏–π", 
        ["–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ", "–î—Ä—É–∂–µ—Å–∫–∏–µ", "–°–µ–º–µ–π–Ω—ã–µ", "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ"])
    power_distance = st.slider("–†–∞–∑–Ω–∏—Ü–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ", -5, 5, 0)
    trust_level = st.slider("–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è", 1, 10, 7)

with col4:
    communication_style = st.selectbox("–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è", 
        ["–§–æ—Ä–º–∞–ª—å–Ω—ã–π", "–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π", "–ö–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã–π", "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π"])
    time_pressure = st.slider("–í—Ä–µ–º–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ", 1, 10, 3)
    setting_formality = st.slider("–§–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏", 1, 10, 5)

# === –¢–ï–ü–ï–†–¨ –ú–û–ñ–ù–û –°–û–ó–î–ê–í–ê–¢–¨ –í–ö–õ–ê–î–ö–ò ===

tab1, tab2, tab3, tab4 = st.tabs(["üìä –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö", "üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "üîç –ê–Ω–∞–ª–∏–∑", "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"])

with tab1:
    st.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–¥–µ–Ω—ã! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")

with tab2:
    st.header("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏")
    
    categories = ['–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å', '–î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å', '–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è', '–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–ù–µ–≤—Ä–æ—Ç–∏–∑–º']
    values_a = [a_openness, a_conscientiousness, a_extraversion, a_agreeableness, a_neuroticism]
    values_b = [b_openness, b_conscientiousness, b_extraversion, b_agreeableness, b_neuroticism]
    
    # –†–∞–¥–∞—Ä-—á–∞—Ä—Ç
    fig, ax = plt.subplots(figsize=(10, 8), subplot_kw=dict(projection='polar'))
    angles = np.linspace(0, 2*np.pi, len(categories), endpoint=False).tolist()
    values_a += values_a[:1]
    values_b += values_b[:1]
    angles += angles[:1]
    
    ax.plot(angles, values_a, 'o-', linewidth=2, label='–ß–µ–ª–æ–≤–µ–∫ –ê')
    ax.fill(angles, values_a, alpha=0.25)
    ax.plot(angles, values_b, 'o-', linewidth=2, label='–ß–µ–ª–æ–≤–µ–∫ –ë')
    ax.fill(angles, values_b, alpha=0.25)
    
    ax.set_xticks(angles[:-1])
    ax.set_xticklabels(categories)
    ax.set_ylim(0, 10)
    ax.legend(loc='upper right')
    ax.grid(True)
    st.pyplot(fig)
    
    # –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
    st.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    fig2, ax2 = plt.subplots(figsize=(10, 6))
    x = np.arange(len(categories))
    width = 0.35
    ax2.bar(x - width/2, values_a[:-1], width, label='–ß–µ–ª–æ–≤–µ–∫ –ê')
    ax2.bar(x + width/2, values_b[:-1], width, label='–ß–µ–ª–æ–≤–µ–∫ –ë')
    ax2.set_xlabel('–ß–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏')
    ax2.set_ylabel('–ë–∞–ª–ª—ã')
    ax2.set_title('–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏')
    ax2.set_xticks(x)
    ax2.set_xticklabels(categories)
    ax2.legend()
    st.pyplot(fig2)

with tab3:
    st.header("–ê–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
    
    # –†–∞—Å—á—ë—Ç –º–µ—Ç—Ä–∏–∫
    personality_similarity = 1 - (np.abs(np.array(values_a[:-1]) - np.array(values_b[:-1])).mean() / 10)
    complementarity_score = (min(a_extraversion, b_extraversion) + min(a_agreeableness, b_agreeableness)) / 20
    potential_conflict = (abs(a_agreeableness - b_agreeableness) + abs(a_neuroticism - b_neuroticism)) / 20
    
    data = {
        '–ü–∞—Ä–∞–º–µ—Ç—Ä': ['–°—Ö–æ–¥—Å—Ç–≤–æ –ª–∏—á–Ω–æ—Å—Ç–µ–π', '–ö–æ–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–æ—Å—Ç—å', '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞', '–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞'],
        '–ó–Ω–∞—á–µ–Ω–∏–µ': [
            personality_similarity,
            complementarity_score, 
            1 - potential_conflict,
            (personality_similarity + complementarity_score + (1 - potential_conflict)) / 3
        ]
    }
    df = pd.DataFrame(data)
    
    # –ì—Ä–∞—Ñ–∏–∫
    fig3, ax3 = plt.subplots(figsize=(10, 6))
    colors = ['skyblue', 'lightgreen', 'lightcoral', 'gold']
    bars = ax3.barh(df['–ü–∞—Ä–∞–º–µ—Ç—Ä'], df['–ó–Ω–∞—á–µ–Ω–∏–µ'], color=colors)
    ax3.set_xlim(0, 1)
    ax3.set_xlabel('–û—Ü–µ–Ω–∫–∞')
    ax3.set_title('–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è')
    for bar, value in zip(bars, df['–ó–Ω–∞—á–µ–Ω–∏–µ']):
        ax3.text(bar.get_width() + 0.01, bar.get_y() + bar.get_height()/2, f'{value:.2f}', va='center')
    st.pyplot(fig3)
    
    # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
    st.subheader("–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    overall_score = df[df['–ü–∞—Ä–∞–º–µ—Ç—Ä'] == '–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞']['–ó–Ω–∞—á–µ–Ω–∏–µ'].values[0]
    if overall_score > 0.7:
        st.success("‚úÖ –í—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. –ü–∞—Ä—Ç–Ω–µ—Ä—ã —Ö–æ—Ä–æ—à–æ –¥–æ–ø–æ–ª–Ω—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞.")
    elif overall_score > 0.5:
        st.warning("‚ö†Ô∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç —É—Å–∏–ª–∏–π –∏ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–æ–≤.")
    else:
        st.error("‚ùå –ù–∏–∑–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.")
    
    st.write("### –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:")
    if abs(a_extraversion - b_extraversion) > 4:
        st.write("- **–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è:** –ë–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —É—Ä–æ–≤–Ω–µ –æ–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ")
    if a_agreeableness < 4 or b_agreeableness < 4:
        st.write("- **–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** –ù–∏–∑–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –∫–æ–Ω—Ñ—Ä–æ–Ω—Ç–∞—Ü–∏–∏")
    if a_neuroticism > 7 or b_neuroticism > 7:
        st.write("- **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å:** –í—ã—Å–æ–∫–∏–π –Ω–µ–≤—Ä–æ—Ç–∏–∑–º –º–æ–∂–µ—Ç –æ—Å–ª–æ–∂–Ω—è—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ")

with tab4:
    st.header("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
    
    recommendations = []
    if abs(a_extraversion - b_extraversion) > 3:
        recommendations.append("**–ë–∞–ª–∞–Ω—Å –æ–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:** –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç—É —Å—Ç–æ–∏—Ç –¥–∞–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è, –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç—É ‚Äî –≤—Ä–µ–º—è –Ω–∞ –æ–±–¥—É–º—ã–≤–∞–Ω–∏–µ")
    if a_agreeableness < 5 and b_agreeableness < 5:
        recommendations.append("**–†–∞–∑–≤–∏—Ç–∏–µ —ç–º–ø–∞—Ç–∏–∏:** –û–±–æ–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º —Å—Ç–æ–∏—Ç –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–æ–≤")
    if potential_conflict > 0.6:
        recommendations.append("**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏:** –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏–π")
    if personality_similarity < 0.4:
        recommendations.append("**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∏–π:** –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Ä–∞–∑–ª–∏—á–∏—è –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤")
    if time_pressure > 7:
        recommendations.append("**–¢–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç:** –ü—Ä–∏ –≤—ã—Å–æ–∫–æ–º –¥–∞–≤–ª–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤—Å—Ç—Ä–µ—á")
    
    if not recommendations:
        recommendations = [
            "**–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞:** –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã",
            "**–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:** –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—Å—É–∂–¥–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è",
            "**–†–∞–∑–≤–∏—Ç–∏–µ –¥–æ–≤–µ—Ä–∏—è:** –£–∫—Ä–µ–ø–ª—è–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏–≤—à–∏–µ—Å—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã"
        ]
    
    for i, rec in enumerate(recommendations, 1):
        st.write(f"{i}. {rec}")
    
    st.download_button(
        label="üì• –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É",
        data=df.to_csv(index=False).encode('utf-8'),
        file_name='interaction_analysis.csv',
        mime='text/csv',
    )

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("–û –º–µ—Ç–æ–¥–µ –∞–Ω–∞–ª–∏–∑–∞")
    st.write("""
    –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ:
    - –ü—è—Ç–∏—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –º–æ–¥–µ–ª–∏ –ª–∏—á–Ω–æ—Å—Ç–∏
    - –°–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    - –ö–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    
    **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —à–∫–∞–ª:**
    - 1-3: –ù–∏–∑–∫–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å
    - 4-7: –°—Ä–µ–¥–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å  
    - 8-10: –í—ã—Å–æ–∫–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å
    """)
    st.info("üí° –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º.")
