import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ì–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏", page_icon="üí¨", layout="wide")

# –°—Ç–∏–ª–∏: –∫—Ä—É–ø–Ω—ã–µ –ø–æ–ª–∑—É–Ω–∫–∏ + –∞–Ω–∏–º–∞—Ü–∏—è —Å–º–∞–π–ª–∏–∫–æ–≤
st.markdown("""
<style>
    /* –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ–ª–∑—É–Ω–∫–∏ */
    .stSlider > div > div > div {
        height: 12px !important;
        border-radius: 6px !important;
    }
    .stSlider > div > div > div > div {
        height: 24px !important;
        width: 24px !important;
        border-radius: 50% !important;
        background-color: #a67c9f !important;
        border: 2px solid white !important;
        box-shadow: 0 2px 6px rgba(0,0,0,0.2) !important;
    }

    /* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —Å–º–∞–π–ª–∏–∫–æ–≤ */
    .emoji-container {
        text-align: center;
        font-size: 40px;
        margin: 12px auto 20px;
        transition: transform 0.3s ease, opacity 0.3s ease;
        animation: pulse 2s infinite;
    }
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    
    /* –ú—è–≥–∫–∏–π —Ñ–æ–Ω */
    .reportview-container { background: #fdf6f0; }
    .sidebar .sidebar-content { background: #faf3ec; }
    h1, h2, h3 { color: #5a4a66; }
</style>
""", unsafe_allow_html=True)

st.title("üí¨ –ì–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏: –∫–∞–∫ –≤–∞–º –¥–≤–æ–∏–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤–º–µ—Å—Ç–µ?")

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–º–∞–π–ª–∏–∫–æ–≤ ===
def render_emoji(val, low_emoji, mid_emoji, high_emoji):
    if val <= 3:
        emoji = low_emoji
    elif val <= 6:
        emoji = mid_emoji
    else:
        emoji = high_emoji
    # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    st.markdown(f"""
    <div class="emoji-container" style="opacity: 0.95;">
        {emoji}
    </div>
    """, unsafe_allow_html=True)

# === –°–ë–û–† –î–ê–ù–ù–´–• ===
st.header("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ –≤–∞—Å –∏ –≤–∞—à–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–µ")

col1, col2 = st.columns(2)

with col1:
    st.subheader("–í—ã")
    
    openness_a = st.slider("–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –Ω–æ–≤–æ–º—É", 1, 10, 7)
    render_emoji(openness_a, "ü§ñ", "üôÇ", "‚ú®")
    
    conscientiousness_a = st.slider("–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å", 1, 10, 6)
    render_emoji(conscientiousness_a, "üåÄ", "üôÇ", "üéØ")
    
    extraversion_a = st.slider("–û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏", 1, 10, 8)
    render_emoji(extraversion_a, "üïØÔ∏è", "üôÇ", "üåü")
    
    agreeableness_a = st.slider("–î–æ–±—Ä–æ—Ç–∞ –∏ —É–º–µ–Ω–∏–µ –∏–¥—Ç–∏ –Ω–∞ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å", 1, 10, 5)
    render_emoji(agreeableness_a, "üò§", "üôÇ", "üíñ")
    
    neuroticism_a = st.slider("–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å", 1, 10, 3)
    render_emoji(neuroticism_a, "üßò‚Äç‚ôÄÔ∏è", "üòê", "üåßÔ∏è")

with col2:
    st.subheader("–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ / –ø–∞—Ä—Ç–Ω—ë—Ä")
    
    openness_b = st.slider("–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –Ω–æ–≤–æ–º—É", 1, 10, 5)
    render_emoji(openness_b, "ü§ñ", "üôÇ", "‚ú®")
    
    conscientiousness_b = st.slider("–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å", 1, 10, 9)
    render_emoji(conscientiousness_b, "üåÄ", "üôÇ", "üéØ")
    
    extraversion_b = st.slider("–û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏", 1, 10, 4)
    render_emoji(extraversion_b, "üïØÔ∏è", "üôÇ", "üåü")
    
    agreeableness_b = st.slider("–î–æ–±—Ä–æ—Ç–∞ –∏ —É–º–µ–Ω–∏–µ –∏–¥—Ç–∏ –Ω–∞ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å", 1, 10, 8)
    render_emoji(agreeableness_b, "üò§", "üôÇ", "üíñ")
    
    neuroticism_b = st.slider("–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å", 1, 10, 6)
    render_emoji(neuroticism_b, "üßò‚Äç‚ôÄÔ∏è", "üòê", "üåßÔ∏è")

st.header("–ö–∞–∫ –≤—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç–µ?")

col3, col4 = st.columns(2)

with col3:
    relationship_type = st.selectbox("–¢–∏–ø –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π", 
        ["–ö–æ–ª–ª–µ–≥–∏", "–î—Ä—É–∑—å—è", "–°–µ–º—å—è", "–ü–∞—Ä—Ç–Ω—ë—Ä—ã"])
    power_distance = st.slider("–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã —Ä–∞–≤–Ω—ã –≤ —ç—Ç–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?", -5, 5, 0, 
                               help="-5: –æ–¥–∏–Ω —Å–∏–ª—å–Ω–æ –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç ‚Üí 0: —Ä–∞–≤–Ω—ã–µ –ø–∞—Ä—Ç–Ω—ë—Ä—ã ‚Üí +5: –¥—Ä—É–≥–æ–π –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç")
    trust_level = st.slider("–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É?", 1, 10, 7)

with col4:
    communication_style = st.selectbox("–ö–∞–∫ –≤—ã –æ–±—ã—á–Ω–æ –æ–±—â–∞–µ—Ç–µ—Å—å?", 
        ["–°–ø–æ–∫–æ–π–Ω–æ –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ", "–ü–æ-–¥—Ä—É–∂–µ—Å–∫–∏", "–ò–Ω–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Å–ø–æ—Ä—ã", "–°—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—â–∏–π —è–∑—ã–∫"])
    time_pressure = st.slider("–ß–∞—Å—Ç–æ –ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –≤ —Å–ø–µ—à–∫–µ?", 1, 10, 3)
    setting_formality = st.slider("–ù–∞—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã –≤–∞—à–∏ –≤—Å—Ç—Ä–µ—á–∏?", 1, 10, 5)

# === –í–ö–õ–ê–î–ö–ò ===
tab1, tab2, tab3, tab4 = st.tabs(["üìä –í–∞—à–∏ –ø—Ä–æ—Ñ–∏–ª–∏", "üåà –ö–∞–∫ –≤—ã –ø–æ—Ö–æ–∂–∏?", "üîç –ß—Ç–æ –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å?", "üíå –°–æ–≤–µ—Ç—ã –¥–ª—è –≤–∞—Å"])

with tab1:
    st.info("–ó–¥–µ—Å—å –≤—ã –≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –≤—ã –∏ –≤–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –º–∏—Ä. –ù–µ—Ç ¬´—Ö–æ—Ä–æ—à–æ¬ª –∏–ª–∏ ¬´–ø–ª–æ—Ö–æ¬ª ‚Äî –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –±—ã—Ç—å —Å–æ–±–æ–π ‚ù§Ô∏è")

with tab2:
    st.header("–í–∞—à–∏ –ø—Ä–æ—Ñ–∏–ª–∏ —Ä—è–¥–æ–º")
    
    categories = ['–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å', '–û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–î–æ–±—Ä–æ—Ç–∞', '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å']
    values_a = [openness_a, conscientiousness_a, extraversion_a, agreeableness_a, neuroticism_a]
    values_b = [openness_b, conscientiousness_b, extraversion_b, agreeableness_b, neuroticism_b]
    
    fig, ax = plt.subplots(figsize=(10, 8), subplot_kw=dict(projection='polar'))
    angles = np.linspace(0, 2*np.pi, len(categories), endpoint=False).tolist()
    values_a += values_a[:1]
    values_b += values_b[:1]
    angles += angles[:1]
    
    ax.plot(angles, values_a, 'o-', linewidth=2, label='–í—ã', color='#a67c9f')
    ax.fill(angles, values_a, alpha=0.25, color='#a67c9f')
    ax.plot(angles, values_b, 'o-', linewidth=2, label='–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫', color='#6b9ca9')
    ax.fill(angles, values_b, alpha=0.25, color='#6b9ca9')
    
    ax.set_xticks(angles[:-1])
    ax.set_xticklabels(categories, fontsize=11)
    ax.set_ylim(0, 10)
    ax.legend(loc='upper right')
    ax.grid(True, color='#d4c1b0')
    st.pyplot(fig)

with tab3:
    st.header("–ß—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞?")
    
    similarity = 1 - (np.abs(np.array(values_a[:-1]) - np.array(values_b[:-1])).mean() / 10)
    harmony = (min(extraversion_a, extraversion_b) + min(agreeableness_a, agreeableness_b)) / 20
    emotional_gap = (abs(agreeableness_a - agreeableness_b) + abs(neuroticism_a - neuroticism_b)) / 20
    overall = (similarity + harmony + (1 - emotional_gap)) / 3
    
    data = {
        '–ê—Å–ø–µ–∫—Ç': ['–ü–æ—Ö–æ–∂–µ—Å—Ç—å –≤–∑–≥–ª—è–¥–æ–≤', '–í–∑–∞–∏–º–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–ª–∏–∑–æ—Å—Ç—å', '–û–±—â–∞—è –≥–∞—Ä–º–æ–Ω–∏—è'],
        '–û—Ü–µ–Ω–∫–∞': [similarity, harmony, 1 - emotional_gap, overall]
    }
    df = pd.DataFrame(data)
    
    fig, ax = plt.subplots(figsize=(10, 6))
    colors = ['#d4a5a5', '#a8c3b1', '#c2b4d4', '#f0c9a9']
    bars = ax.barh(df['–ê—Å–ø–µ–∫—Ç'], df['–û—Ü–µ–Ω–∫–∞'], color=colors)
    ax.set_xlim(0, 1)
    ax.set_xlabel('–£—Ä–æ–≤–µ–Ω—å')
    ax.set_title('–ö–∞–∫ –≤–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤–º–µ—Å—Ç–µ?')
    for bar, val in zip(bars, df['–û—Ü–µ–Ω–∫–∞']):
        ax.text(bar.get_width() + 0.01, bar.get_y() + bar.get_height()/2, f'{val:.2f}', va='center')
    st.pyplot(fig)
    
    st.subheader("–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è –≤–∞—Å?")
    
    if overall > 0.7:
        st.success("‚ú® –£ –≤–∞—Å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –æ—Å–Ω–æ–≤–∞ –¥–ª—è –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è! –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ —É–º–µ–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—â–∏–π —è–∑—ã–∫.")
    elif overall > 0.5:
        st.warning("üå± –í–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏–º–µ—é—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª! –ù–µ–±–æ–ª—å—à–∏–µ —É—Å–∏–ª–∏—è –ø–æ–º–æ–≥—É—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.")
    else:
        st.error("üåßÔ∏è –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º —Å—Ç–æ–∏—Ç —É–¥–µ–ª–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Ç–æ–º—É, –∫–∞–∫ –≤—ã –æ–±—â–∞–µ—Ç–µ—Å—å. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –¥–∞–∂–µ –±–ª–∏–∑–∫–∏–µ –ª—é–¥–∏ –∏–Ω–æ–≥–¥–∞ ¬´–≥–æ–≤–æ—Ä—è—Ç –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö¬ª.")
    
    st.write("### –ù–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ:")
    if abs(extraversion_a - extraversion_b) > 4:
        st.write("üí¨ **–û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** –û–¥–∏–Ω –∏–∑ –≤–∞—Å –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏, –¥—Ä—É–≥–æ–π ‚Äî –≤ —Ç–∏—à–∏–Ω–µ. –≠—Ç–æ –Ω–µ –ø–ª–æ—Ö–æ, –ø—Ä–æ—Å—Ç–æ –ø–æ-—Ä–∞–∑–Ω–æ–º—É!")
    if agreeableness_a < 4 or agreeableness_b < 4:
        st.write("ü§ù **–î–æ–±—Ä–æ—Ç–∞:** –í –º–æ–º–µ–Ω—Ç—ã –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å: –∑–∞ —Ä–µ–∑–∫–æ—Å—Ç—å—é –º–æ–∂–µ—Ç —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏–ª–∏ —Å—Ç—Ä–∞—Ö.")
    if neuroticism_a > 7 or neuroticism_b > 7:
        st.write("üåßÔ∏è **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å:** –ö–æ–º—É-—Ç–æ –∏–∑ –≤–∞—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–µ–µ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–¥–µ—Å—å –≤–∞–∂–Ω–µ–µ –æ—Ü–µ–Ω–∫–∏.")

with tab4:
    st.header("–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –µ—â—ë —Ç–µ–ø–ª–µ–µ?")
    
    tips = []
    if abs(extraversion_a - extraversion_b) > 3:
        tips.append("‚ú® **–†–∞–∑–Ω—ã–µ —Ä–∏—Ç–º—ã –æ–±—â–µ–Ω–∏—è:** –ï—Å–ª–∏ –≤—ã –ª—é–±–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å, –∞ –ø–∞—Ä—Ç–Ω—ë—Ä ‚Äî –ø–æ–º–æ–ª—á–∞—Ç—å, –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å: ¬´–Ø –ø–æ–¥–µ–ª—é—Å—å ‚Äî –∏ –¥–∞–º —Ç–µ–±–µ –≤—Ä–µ–º—è –ø–æ–¥—É–º–∞—Ç—å¬ª.")
    if agreeableness_a < 5 and agreeableness_b < 5:
        tips.append("üí¨ **–ú—è–≥–∫–æ—Å—Ç—å –≤ –¥–∏–∞–ª–æ–≥–µ:** –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Å ¬´–Ø —á—É–≤—Å—Ç–≤—É—é‚Ä¶¬ª, –∞ –Ω–µ ¬´–¢—ã –≤—Å–µ–≥–¥–∞‚Ä¶¬ª ‚Äî —ç—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ.")
    if emotional_gap > 0.6:
        tips.append("üíû **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:** –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ: ¬´–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?¬ª ‚Äî –∏–Ω–æ–≥–¥–∞ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.")
    if similarity < 0.4:
        tips.append("üåà **–¶–µ–Ω–∏—Ç–µ —Ä–∞–∑–ª–∏—á–∏—è:** –¢–æ, —á—Ç–æ –≤—ã –≤–∏–¥–∏—Ç–µ –º–∏—Ä –ø–æ-—Ä–∞–∑–Ω–æ–º—É, ‚Äî —ç—Ç–æ —à–∞–Ω—Å —Ä–∞—Å—Ç–∏ –≤–º–µ—Å—Ç–µ, –∞ –Ω–µ –ø–æ–≤–æ–¥ –¥–ª—è —Å–ø–æ—Ä–æ–≤.")
    if time_pressure > 7:
        tips.append("‚è≥ **–°–ø–µ—à–∫–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ:** –í —Å—Ç—Ä–µ—Å—Å–µ –º—ã —Ö—É–∂–µ —Å–ª—ã—à–∏–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞. –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å: ¬´–î–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —ç—Ç–æ, –∫–æ–≥–¥–∞ —Å–º–æ–∂–µ–º —É–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º—è¬ª.")
    
    if not tips:
        tips = [
            "üå∑ **–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!** –í—ã —É–∂–µ —É–º–µ–µ—Ç–µ —Å–ª—É—à–∞—Ç—å –∏ —Å–ª—ã—à–∞—Ç—å.",
            "üí¨ **–†–µ–≥—É–ª—è—Ä–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ:** ¬´–ö–∞–∫ —Ç–µ–±–µ –±—ã–ª–æ –≤ –Ω–∞—à–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ?¬ª ‚Äî —ç—Ç–æ —É–∫—Ä–µ–ø–ª—è–µ—Ç –¥–æ–≤–µ—Ä–∏–µ.",
            "‚ù§Ô∏è **–ú–∞–ª–µ–Ω—å–∫–∏–µ –∂–µ—Å—Ç—ã –≤–∞–∂–Ω—ã:** –ò–Ω–æ–≥–¥–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∫–∞–∑–∞—Ç—å ¬´–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã—Å–ª—É—à–∞–ª(–∞)¬ª."
        ]
    
    for i, tip in enumerate(tips, 1):
        st.markdown(f"{i}. {tip}")

    st.download_button(
        label="üì• –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–≤–µ—Ç—ã",
        data=df.to_csv(index=False).encode('utf-8'),
        file_name='harmony_tips.csv',
        mime='text/csv',
    )

with st.sidebar:
    st.header("–û —á—ë–º —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
    st.write("""
    –ó–¥–µ—Å—å –Ω–µ—Ç ¬´—Ç–µ—Å—Ç–∞¬ª –∏ ¬´–æ—Ü–µ–Ω–æ–∫¬ª.  
    –≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —á—Ç–æ–±—ã **–ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞** ‚Äî –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è, —Å —Ç–µ–ø–ª–æ—Ç–æ–π –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º.
    """)
    st.info("üå∏ –°–æ–≤–µ—Ç: –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –≤–º–µ—Å—Ç–µ —Å –±–ª–∏–∑–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º ‚Äî —ç—Ç–æ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–∞—á–∞–ª–æ–º —Ç—ë–ø–ª–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.")
